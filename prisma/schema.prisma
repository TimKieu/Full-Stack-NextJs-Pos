// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id           Int           @id @default(autoincrement())
  name         String        @db.VarChar(50)
  createdAt    DateTime      @default(now())
  address      String
  tax          String        @db.VarChar(30)
  phone        String        @db.VarChar(10)
  email        String        @db.VarChar(50)
  logo         String?       @db.VarChar(50)
  status       enumStatus    @default(Active)
  branchs      Branch[] // one to maney
  products     Product[]
  units        Unit[]
  ProductTypes ProductType[]
  Promotions   Promotion[]
  Positions    Position[]
  tabless      Tables[]
  expenses     Expenses[]
  employees    Employee[]
}

model Branch {
  id           Int           @id @default(autoincrement())
  name         String        @db.VarChar(50)
  codeReceipt  String        @db.VarChar(10)
  address      String
  createdAt    DateTime      @default(now())
  expiration   DateTime
  phone        String        @db.VarChar(10)
  company      Company       @relation(fields: [companyId], references: [id]) // Foreign Key
  companyId    Int
  status       enumStatus    @default(Active)
  tabless      Tables[]
  transactions Transaction[]
  employees    Employee[]
}

model Product {
  id               Int               @id @default(autoincrement())
  name             String            @db.VarChar(50)
  cost             Float             @default(0.00)
  price            Float             @default(0.00)
  stock            Int
  img              String?           @db.VarChar(50)
  unit             Unit              @relation(fields: [unitId], references: [id])
  unitId           Int
  productType      ProductType       @relation(fields: [productTypeId], references: [id])
  productTypeId    Int
  company          Company           @relation(fields: [companyId], references: [id])
  companyId        Int
  status           enumStatus        @default(Active)
  ItemTransactions ItemTransaction[]
}

model Unit {
  id        Int        @id @default(autoincrement())
  name      String     @db.VarChar(50)
  company   Company    @relation(fields: [companyId], references: [id])
  companyId Int
  status    enumStatus @default(Active)
  Products  Product[]
}

model ProductType {
  id        Int        @id @default(autoincrement())
  name      String     @db.VarChar(50)
  company   Company    @relation(fields: [companyId], references: [id])
  companyId Int
  status    enumStatus @default(Active)
  Products  Product[]
}

model Promotion {
  id               Int             @id @default(autoincrement())
  name             String          @db.VarChar(50)
  detail           String
  promotionalPrice Float           @default(0.00)
  startDate        DateTime
  endDate          DateTime
  img              String?         @db.VarChar(50)
  company          Company         @relation(fields: [companyId], references: [id])
  companyId        Int
  status           enumStatus      @default(Active)
  ItemPromotions   ItemPromotion[]
}

model ItemPromotion {
  id          Int        @id @default(autoincrement())
  productId   Int
  stock       Float      @default(0.00)
  promotion   Promotion  @relation(fields: [promotionId], references: [id])
  promotionId Int
  status      enumStatus @default(Active)
}

model Employee {
  id           Int           @id @default(autoincrement())
  name         String        @db.VarChar(50)
  subname      String        @db.VarChar(50)
  age          Int
  cardId       String        @db.VarChar(30)
  userName     String        @unique
  passWord     String
  company      Company       @relation(fields: [companyId], references: [id])
  companyId    Int
  branch       Branch        @relation(fields: [branchId], references: [id])
  branchId     Int
  position     Position      @relation(fields: [positionId], references: [id])
  positionId   Int
  role         enumrole      @default(user)
  status       enumStatus    @default(Active)
  transactions Transaction[]
}

model Position {
  id        Int        @id @default(autoincrement())
  name      String     @db.VarChar(50)
  salary    Float      @default(0.00)
  company   Company    @relation(fields: [companyId], references: [id])
  companyId Int
  status    enumStatus @default(Active)
  employees Employee[]
}

model Tables {
  id         String     @id @unique @default(uuid())
  name       String     @db.VarChar(50)
  stoves     Int //จำนวนเตา
  people     Int
  expiration Int // เวลาหมดโต๊ะ (นาที)
  branch     Branch     @relation(fields: [branchId], references: [id])
  branchId   Int
  company    Company    @relation(fields: [companyId], references: [id])
  companyId  Int
  status     enumStatus @default(Active)
}

model Transaction {
  id         String      @id @unique @default(uuid())
  tableId    String
  receipt    String      @db.VarChar(30)
  startOrder DateTime
  endOrder   DateTime
  peoples    Int
  totalPrice Float       @default(0.00)
  branch     Branch      @relation(fields: [branchId], references: [id])
  branchId   Int
  employee   Employee    @relation(fields: [employeeId], references: [id])
  employeeId Int
  status     enumStatus  @default(Active)
  orderBills OrderBill[]
}

model OrderBill {
  id               Int               @id @default(autoincrement())
  orderDate        DateTime
  transaction      Transaction       @relation(fields: [transactionId], references: [id])
  transactionId    String
  status           enumOrderBill     @default(making)
  ItemTransactions ItemTransaction[]
}

model ItemTransaction {
  id          Int       @id @default(autoincrement())
  qty         Int
  product     Product   @relation(fields: [productId], references: [id])
  productId   Int
  orderBill   OrderBill @relation(fields: [orderBillId], references: [id])
  orderBillId Int
}

model Expenses {
  id           Int            @id @default(autoincrement())
  name         String         @db.VarChar(50)
  company      Company        @relation(fields: [companyId], references: [id])
  companyId    Int
  status       enumStatus     @default(Active)
  itemExpenses ItemExpenses[]
}

model ItemExpenses {
  id         Int      @id @default(autoincrement())
  price      Float    @default(0.00)
  orderDate  DateTime @default(now())
  expenses   Expenses @relation(fields: [expensesId], references: [id])
  expensesId Int
}

enum enumStatus {
  Active
  InActive
}

enum enumrole {
  admin
  userAdmin
  user
}

enum enumOrderBill {
  succeed
  cancel
  making
}
